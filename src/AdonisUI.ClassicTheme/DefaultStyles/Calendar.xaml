<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:adonisConverters="clr-namespace:AdonisUI.Converters;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI">

	<ControlTemplate x:Key="CalendarButtonTemplate" TargetType="ContentControl">
		<Grid>
			<Border x:Name="Border"
			    Background="{TemplateBinding Background}"
			    BorderBrush="{TemplateBinding BorderBrush}"
			    BorderThickness="{TemplateBinding BorderThickness}"
			    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}" />

			<Border x:Name="SpotlightLayer"
			    adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ContentControl}}"
			    Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
			    BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
			    BorderThickness="{TemplateBinding BorderThickness}"
			    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}" />

			<ContentPresenter Margin="{TemplateBinding Padding}"
			    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
			    Content="{TemplateBinding Content}"
			    ContentTemplate="{TemplateBinding ContentTemplate}" />
		</Grid>

		<ControlTemplate.Triggers>

			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBorderBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBorderBrush}}" />
			</Trigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
			</Trigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="{x:Type CalendarButton}" TargetType="CalendarButton">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
		<Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template" Value="{StaticResource CalendarButtonTemplate}" />
	</Style>

	<Style x:Key="{x:Type CalendarDayButton}" TargetType="CalendarDayButton">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
		<Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template" Value="{StaticResource CalendarButtonTemplate}" />

		<Style.Triggers>

			<Trigger Property="IsInactive" Value="True">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
			</Trigger>

			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
				<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentForegroundBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentIntenseHighlightBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentIntenseHighlightBorderBrush}}" />
			</Trigger>

		</Style.Triggers>
	</Style>

	<Style x:Key="ChangeTimeRangeButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
		<Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="8,2" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="Template" Value="{StaticResource CalendarButtonTemplate}" />
	</Style>

	<Style x:Key="{x:Type CalendarItem}" TargetType="{x:Type CalendarItem}">
		<Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}" />
		<Setter Property="Margin" Value="0,3,0,3" />
		<Setter Property="Padding" Value="4" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarItem}">
					<ControlTemplate.Resources>
						<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
							<TextBlock Margin="0,6,0,6"
							    HorizontalAlignment="Center"
							    VerticalAlignment="Center"
							    FontSize="9.5"
							    FontWeight="Bold"
							    Foreground="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=CalendarItem}}"
							    Text="{Binding}" />
						</DataTemplate>
					</ControlTemplate.Resources>

					<Grid x:Name="PART_Root">
						<Border Background="{TemplateBinding Background}"
						    BorderBrush="{TemplateBinding BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
						    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}">
							<Grid Margin="{TemplateBinding Padding}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<Button x:Name="PART_PreviousButton"
								    Grid.Row="0"
								    Grid.Column="0"
								    Width="28"
								    Height="20"
								    HorizontalAlignment="Left"
								    Focusable="False"
								    Style="{StaticResource ChangeTimeRangeButtonStyle}">
									<Button.ContentTemplate>
										<DataTemplate>
											<Path Width="6"
											    Height="10"
											    Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
											    Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
											    Stretch="Fill" />
										</DataTemplate>
									</Button.ContentTemplate>
								</Button>

								<Button x:Name="PART_HeaderButton"
								    Grid.Row="0"
								    Grid.Column="1"
								    HorizontalAlignment="Center"
								    Focusable="False"
								    FontSize="10.5"
								    FontWeight="Bold"
								    Style="{StaticResource ChangeTimeRangeButtonStyle}" />

								<Button x:Name="PART_NextButton"
								    Grid.Row="0"
								    Grid.Column="2"
								    Width="28"
								    Height="20"
								    HorizontalAlignment="Right"
								    Focusable="False"
								    Style="{StaticResource ChangeTimeRangeButtonStyle}">
									<Button.ContentTemplate>
										<DataTemplate>
											<Path Width="6"
											    Height="10"
											    Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
											    Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
											    Stretch="Fill" />
										</DataTemplate>
									</Button.ContentTemplate>
								</Button>

								<Grid x:Name="PART_MonthView"
								    Grid.Row="1"
								    Grid.ColumnSpan="3"
								    Visibility="Visible">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="*" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
									</Grid.RowDefinitions>
								</Grid>

								<Grid x:Name="PART_YearView"
								    Grid.Row="1"
								    Grid.ColumnSpan="3"
								    Visibility="Hidden">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
								</Grid>
							</Grid>
						</Border>
					</Grid>

					<ControlTemplate.Triggers>

						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>

						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Hidden" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type Calendar}" TargetType="Calendar">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
		<Setter Property="CalendarItemStyle" Value="{DynamicResource {x:Type CalendarItem}}" />
		<Setter Property="CalendarButtonStyle" Value="{DynamicResource {x:Type CalendarButton}}" />
		<Setter Property="CalendarDayButtonStyle" Value="{DynamicResource {x:Type CalendarDayButton}}" />

		<Style.Triggers>

			<DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionBorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.ForegroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionForegroundBrush}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3InteractionBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3InteractionBorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.ForegroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3InteractionForegroundBrush}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BackgroundBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4InteractionBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4InteractionBorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.ForegroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4InteractionForegroundBrush}}" />
			</DataTrigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}" />
			</Trigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

		</Style.Triggers>
	</Style>

</ResourceDictionary>