<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
    xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/DefaultStyles/TextBox.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
		<Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}" />
		<Setter Property="Padding" Value="8,4" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Grid>
						<Border Name="Border"
						    Background="{TemplateBinding Background}"
						    BorderBrush="{TemplateBinding BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
						    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"
						    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

						<Border x:Name="SpotlightLayer"
						    adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBoxItem}}"
						    Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
						    BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
						    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"
						    SnapsToDevicePixels="False" />

						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>

			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBorderBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBorderBrush}}" />
			</Trigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2" />
					<Condition Binding="{Binding IsHighlighted, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3" />
					<Condition Binding="{Binding IsHighlighted, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4" />
					<Condition Binding="{Binding IsHighlighted, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
			</Trigger>

		</Style.Triggers>
	</Style>

	<ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition />
				<ColumnDefinition Width="20" />
			</Grid.ColumnDefinitions>

			<Border x:Name="Border"
			    Grid.ColumnSpan="2"
			    Background="Transparent"
			    BorderBrush="Transparent"
			    BorderThickness="0"
			    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}" />

			<Border x:Name="ButtonBorder"
			    Grid.Column="1"
			    Margin="1"
			    Background="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"
			    BorderThickness="0"
			    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"
			    Visibility="Collapsed" />

			<ContentPresenter Grid.Column="1"
			    HorizontalAlignment="Stretch"
			    VerticalAlignment="Stretch"
			    ContentTemplate="{DynamicResource {x:Static adonisUi:Templates.Expander}}" />
		</Grid>

		<ControlTemplate.Triggers>

			<DataTrigger Binding="{Binding IsEditable, RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" Value="True">
				<Setter TargetName="ButtonBorder" Property="Visibility" Value="Visible" />
			</DataTrigger>

			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="ButtonBorder" Property="Background" Value="{Binding Path=(adonisExtensions:CursorSpotlightExtension.BackgroundBrush), RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" />
				<Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{Binding Path=(adonisExtensions:CursorSpotlightExtension.BorderBrush), RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" />
			</Trigger>

			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
			</Trigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}" />
			</Trigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
		<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
		<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}" />
		<Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}" />
		<Setter Property="adonisExtensions:RippleExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1InteractionBrush}}" />
		<Setter Property="adonisExtensions:RippleExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1InteractionBorderBrush}}" />
		<Setter Property="adonisExtensions:RippleExtension.ForegroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1InteractionForegroundBrush}}" />
		<Setter Property="adonisExtensions:CornerRadiusExtension.CornerRadius" Value="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}" />
		<Setter Property="Padding" Value="8,4" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="adonisExtensions:ScrollViewerExtension.VerticalScrollBarExpansionMode" Value="ExpandOnHover" />
		<Setter Property="adonisExtensions:ScrollViewerExtension.HorizontalScrollBarExpansionMode" Value="ExpandOnHover" />
		<Setter Property="adonisExtensions:ScrollViewerExtension.VerticalScrollBarPlacement" Value="Overlay" />
		<Setter Property="adonisExtensions:ScrollViewerExtension.HorizontalScrollBarPlacement" Value="Overlay" />
		<Setter Property="adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver" Value="False" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="adonisExtensions:ValidationExtension.IsErrorMessageVisibleOnFocus" Value="True" />
		<Setter Property="adonisExtensions:ValidationExtension.IsErrorMessageVisibleOnMouseOver" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid>
						<Border x:Name="Border"
						    Background="{TemplateBinding Background}"
						    BorderBrush="{TemplateBinding BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
						    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}" />

						<Border x:Name="SpotlightLayer"
						    adonisExtensions:CursorSpotlightExtension.MouseEventSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"
						    Background="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BackgroundBrush}"
						    BorderBrush="{TemplateBinding adonisExtensions:CursorSpotlightExtension.BorderBrush}"
						    BorderThickness="{TemplateBinding BorderThickness}"
						    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"
						    SnapsToDevicePixels="False" />

						<ToggleButton x:Name="ToggleButton"
						    adonisExtensions:CornerRadiusExtension.CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}"
						    ClickMode="Press"
						    Focusable="False"
						    Foreground="{TemplateBinding Foreground}"
						    IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
						    Template="{StaticResource ComboBoxToggleButtonTemplate}" />

						<Border Margin="0,0,11,0">

							<DockPanel Margin="{TemplateBinding Padding}">

								<adonisControls:ValidationErrorIndicator x:Name="ErrorAlertHost"
								    Margin="0,0,4,0"
								    DockPanel.Dock="Left"
								    ErrorMessagePlacement="{TemplateBinding adonisExtensions:ValidationExtension.ErrorMessagePlacement}"
								    IsErrorMessageDisplayOnFocusEnabled="{TemplateBinding adonisExtensions:ValidationExtension.IsErrorMessageVisibleOnFocus}"
								    IsErrorMessageDisplayOnMouseOverEnabled="{TemplateBinding adonisExtensions:ValidationExtension.IsErrorMessageVisibleOnMouseOver}"
								    IsValidatedElementFocused="False"
								    ValidatedElement="{Binding ., RelativeSource={RelativeSource TemplatedParent}}"
								    Visibility="Collapsed" />

								<ContentPresenter x:Name="ContentSite"
								    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								    Content="{TemplateBinding ComboBox.SelectionBoxItem}"
								    ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
								    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								    IsHitTestVisible="False" />


								<TextBox x:Name="PART_EditableTextBox"
								    HorizontalAlignment="Stretch"
								    VerticalAlignment="Stretch"
								    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
								    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
								    Background="{TemplateBinding Background}"
								    Focusable="True"
								    Foreground="{TemplateBinding Foreground}"
								    IsReadOnly="{TemplateBinding IsReadOnly}"
								    Visibility="Hidden">
									<TextBox.Template>
										<ControlTemplate TargetType="TextBox">
											<Grid>
												<ContentPresenter x:Name="PlaceholderHost"
												    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												    Content="{Binding Path=(adonisExtensions:WatermarkExtension.Watermark), RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}"
												    IsHitTestVisible="False"
												    Opacity="0.5"
												    Visibility="Collapsed" />

												<ScrollViewer Name="PART_ContentHost"
												    Focusable="False"
												    HorizontalScrollBarVisibility="Hidden"
												    Template="{StaticResource TextBoxScrollViewerTemplate}"
												    VerticalScrollBarVisibility="Hidden" />
											</Grid>

											<ControlTemplate.Triggers>
												<DataTrigger Binding="{Binding Path=(adonisExtensions:WatermarkExtension.IsWatermarkVisible), RelativeSource={RelativeSource FindAncestor, AncestorType=ComboBox}}" Value="True">
													<Setter TargetName="PlaceholderHost" Property="Visibility" Value="Visible" />
												</DataTrigger>
											</ControlTemplate.Triggers>
										</ControlTemplate>
									</TextBox.Template>
								</TextBox>
							</DockPanel>
						</Border>

						<!--  Popup showing items  -->
						<Popup x:Name="PART_Popup"
						    adonisExtensions:LayerExtension.IncreaseLayer="True"
						    AllowsTransparency="True"
						    Focusable="False"
						    IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
						    Placement="Bottom"
						    PopupAnimation="Slide">

							<Grid x:Name="DropDown"
							    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
							    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
							    SnapsToDevicePixels="True">

								<Border x:Name="DropDownBorder"
								    Margin="0,1,0,0"
								    Background="{TemplateBinding Background}"
								    BorderBrush="{TemplateBinding BorderBrush}"
								    BorderThickness="{TemplateBinding BorderThickness}"
								    CornerRadius="{TemplateBinding adonisExtensions:CornerRadiusExtension.CornerRadius}">

									<ScrollViewer adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver="{Binding Path=(adonisExtensions:ScrollViewerExtension.HideScrollBarsUntilMouseOver), RelativeSource={RelativeSource TemplatedParent}}"
									    adonisExtensions:ScrollViewerExtension.HorizontalScrollBarExpansionMode="{Binding Path=(adonisExtensions:ScrollViewerExtension.HorizontalScrollBarExpansionMode), RelativeSource={RelativeSource TemplatedParent}}"
									    adonisExtensions:ScrollViewerExtension.HorizontalScrollBarPlacement="{Binding Path=(adonisExtensions:ScrollViewerExtension.HorizontalScrollBarPlacement), RelativeSource={RelativeSource TemplatedParent}}"
									    adonisExtensions:ScrollViewerExtension.VerticalScrollBarExpansionMode="{Binding Path=(adonisExtensions:ScrollViewerExtension.VerticalScrollBarExpansionMode), RelativeSource={RelativeSource TemplatedParent}}"
									    adonisExtensions:ScrollViewerExtension.VerticalScrollBarPlacement="{Binding Path=(adonisExtensions:ScrollViewerExtension.VerticalScrollBarPlacement), RelativeSource={RelativeSource TemplatedParent}}"
									    SnapsToDevicePixels="True">
										<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Border>
							</Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>

						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
						</Trigger>

						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>

						<Trigger Property="IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
							<Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
							<Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Collapsed" />
							<Setter TargetName="ToggleButton" Property="HorizontalAlignment" Value="Right" />
							<Setter TargetName="ToggleButton" Property="HorizontalAlignment" Value="Right" />
						</Trigger>

						<Trigger Property="Validation.HasError" Value="True">
							<Setter TargetName="ErrorAlertHost" Property="Visibility" Value="Visible" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
							<Setter TargetName="SpotlightLayer" Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.ErrorBrush}}" />
						</Trigger>

						<Trigger SourceName="PART_EditableTextBox" Property="IsFocused" Value="True">
							<Setter TargetName="ErrorAlertHost" Property="IsValidatedElementFocused" Value="True" />
						</Trigger>

						<Trigger Property="IsDropDownOpen" Value="True">
							<Setter TargetName="ErrorAlertHost" Property="IsValidatedElementFocused" Value="True" />
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>

			<DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionBorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.ForegroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2InteractionForegroundBrush}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3InteractionBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3InteractionBorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.ForegroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3InteractionForegroundBrush}}" />
			</DataTrigger>

			<DataTrigger Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BackgroundBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4BorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4InteractionBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4InteractionBorderBrush}}" />
				<Setter Property="adonisExtensions:RippleExtension.ForegroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4InteractionForegroundBrush}}" />
			</DataTrigger>

			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBrush}}" />
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HighlightBorderBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1IntenseHighlightBorderBrush}}" />
			</Trigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4" />
					<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBrush}}" />
					<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4HighlightBorderBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BackgroundBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBrush}}" />
					<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer4IntenseHighlightBorderBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
				<Setter Property="adonisExtensions:CursorSpotlightExtension.BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}" />
			</Trigger>

			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}" />
				<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}" />
			</Trigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="2" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="3" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer2BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

			<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition Binding="{Binding Path=(adonisExtensions:LayerExtension.ComputedLayer), RelativeSource={RelativeSource Self}}" Value="4" />
					<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
				</MultiDataTrigger.Conditions>
				<MultiDataTrigger.Setters>
					<Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer3BackgroundBrush}}" />
				</MultiDataTrigger.Setters>
			</MultiDataTrigger>

		</Style.Triggers>
	</Style>

</ResourceDictionary>